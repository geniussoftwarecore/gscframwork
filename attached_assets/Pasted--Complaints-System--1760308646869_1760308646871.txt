🧩 نظرة عامة عن المشروع

اسم المشروع: تطبيق الشَّكَهَة (Complaints System)
نوع المشروع: نظام إلكتروني متكامل (Full Stack Application)
المنصة: GitHub — geniussoftwarecore/compleints

فريق التطوير: Genius Software Core
الهدف من المشروع: بناء نظام ذكي لإدارة الشكاوى والملاحظات بطريقة إلكترونية حديثة وفعّالة تخدم المؤسسات، الشركات، والجهات الحكومية.

💡 فكرة المشروع

تطبيق الشَّكَهَة هو نظام رقمي يهدف إلى تسهيل عملية استقبال ومعالجة الشكاوى والبلاغات من قبل المستخدمين عبر واجهة إلكترونية سهلة الاستخدام، مع وجود لوحة تحكم متقدمة للإدارة.
بدلًا من الطرق الورقية أو التواصل التقليدي، يتيح التطبيق تسجيل الشكاوى إلكترونيًا، تتبع حالتها، واستلام الردود في الوقت الفعلي.

المنصة تم تصميمها لتخدم:

المؤسسات الحكومية والخاصة.

مراكز خدمة العملاء.

البلديات والمجالس المحلية.

الجامعات والمعاهد.

الشركات الكبيرة التي تتعامل مع عدد كبير من العملاء.

⚙️ التقنيات واللغات المستخدمة

تم بناء التطبيق باستخدام مزيج من التقنيات الحديثة لتقديم أداء قوي وواجهة تفاعلية جذابة:

🖥️ الواجهة الأمامية (Frontend):

HTML5 / CSS3 / JavaScript لهيكلة الصفحات وتنسيقها.

Bootstrap / Tailwind CSS لتصميم واجهات مرنة متجاوبة مع جميع الأجهزة.

Vue.js أو React.js (بحسب النسخة داخل المشروع المضغوط) لتوفير واجهة ديناميكية وتفاعلية.

🧠 الواجهة الخلفية (Backend):

Node.js (Express Framework) أو PHP (Laravel) — لإدارة العمليات المنطقية ومعالجة الطلبات.

RESTful APIs لتوصيل الواجهة الأمامية مع الخادم الخلفي.

JWT Authentication لتأمين النظام وإدارة صلاحيات المستخدمين.

🗄️ قاعدة البيانات (Database):

MySQL / PostgreSQL لتخزين البيانات (الشكاوى، المستخدمين، الردود، الملفات).

وجود نسخة احتياطية من قاعدة البيانات باسم peregrineDB.bak تشير إلى وجود إعداد متكامل لحفظ البيانات واسترجاعها عند الحاجة.

🧰 أدوات وأطر عمل إضافية:

Git & GitHub لإدارة الإصدارات والمستودع.

Docker أو Node Environment لتشغيل المشروع بسهولة على مختلف الأنظمة.

ملف توثيقي احترافي باسم "دليل تشغيل مشروع Peregrine (Frontend & Backend).md" لتوضيح خطوات التشغيل بشكل منظم ومهني.

🧭 وظيفة التطبيق الأساسية

يعمل تطبيق الشَّكَهَة كنظام إلكتروني موحّد لتلقي الشكاوى والملاحظات من العملاء والمستخدمين، مع إمكانية متابعة كل شكوى خطوة بخطوة حتى يتم حلها.

تشمل الوظائف الرئيسية:

تسجيل شكوى جديدة:
يملأ المستخدم نموذجًا إلكترونيًا يحتوي على تفاصيل الشكوى، نوعها، الجهة المعنية، والمرفقات (مثل الصور أو المستندات الداعمة).

تتبع حالة الشكوى:
يمكن للمستخدم متابعة حالته (قيد المراجعة، قيد المعالجة، منتهية، مرفوضة، إلخ).

لوحة تحكم للإدارة:
للمسؤولين القدرة على:

عرض جميع الشكاوى الواردة.

فرزها وتصنيفها حسب النوع أو الجهة أو الحالة.

الرد عليها أو إغلاقها.

طباعة التقارير الشهرية والإحصاءات.

نظام الإشعارات:
يتم إشعار المستخدم عبر البريد الإلكتروني أو الإشعارات داخل النظام عند تحديث حالة الشكوى.

نظام صلاحيات المستخدمين:
يتيح تحديد أدوار مختلفة:

مستخدم عادي.

موظف معالجة شكاوى.

مدير النظام (Admin).

رفع الملفات والمرفقات:
يمكن رفع صور أو ملفات (PDF, JPG, PNG) لدعم الشكوى أو البلاغ.

لوحة تحليلات وتقارير:
تعرض النظام بيانات تحليلية حول عدد الشكاوى، الجهات الأكثر شكوى، متوسط زمن المعالجة، إلخ.

🌟 مميزات التطبيق

واجهة مستخدم حديثة ومتجاوبة
تصميم مرن وسهل الاستخدام متوافق مع شاشات الهواتف والأجهزة اللوحية والكمبيوتر.

سهولة التشغيل والتثبيت
بفضل ملف "دليل تشغيل المشروع"، يمكن إعداد النظام بسرعة حتى لغير المبرمجين.

نظام كامل ومتكامل (Full Stack)
يجمع بين الواجهة الأمامية والخلفية وقاعدة البيانات في مشروع واحد جاهز للتنصيب والتشغيل.

دعم تعدد المستخدمين والأدوار
مما يجعل التطبيق مناسبًا للمؤسسات الكبيرة التي تتعامل مع أقسام مختلفة.

توثيق احترافي وتنظيم الملفات بشكل دقيق
المشروع يتضمن دليل تشغيل مفصل مع نسخة قاعدة بيانات جاهزة للتجريب.

قابلية التخصيص والتوسّع
يمكن تعديل النظام بسهولة ليناسب قطاعات متعددة (خدمة عملاء، شكاوى طلاب، شكاوى بلدية... إلخ).

حماية وأمان البيانات
استخدام أنظمة تسجيل دخول وصلاحيات مشفرة، وحماية مرفقات المستخدمين.

🧩 مكونات المشروع داخل المستودع

يحتوي المستودع على الملفات التالية:

peregrine_full_project.zip — يحتوي على المشروع الكامل (الواجهة الأمامية + الخلفية + الإعدادات + التصميم).

دليل تشغيل مشروع Peregrine (Frontend & Backend).md — ملف توثيقي يشرح خطوة بخطوة كيفية تشغيل المشروع.

peregrineDB.bak — نسخة احتياطية من قاعدة بيانات المشروع (Backup Database).

ملفات التكوين، الموارد، وبيانات التشغيل الأخرى.

🧱 بنية النظام (System Architecture)
┌───────────────────────────┐
│       واجهة المستخدم (Frontend) │
│  HTML / CSS / JS / React │
└────────────┬──────────────┘
             │
             ▼
┌───────────────────────────┐
│  خادم التطبيق (Backend)   │
│  Node.js / Express / PHP  │
│  RESTful APIs             │
└────────────┬──────────────┘
             │
             ▼
┌───────────────────────────┐
│ قاعدة البيانات (Database) │
│ MySQL / PostgreSQL         │
└───────────────────────────┘

🚀 القيمة المضافة

يُعتبر مشروع الشَّكَهَة أحد المشاريع المميزة التي تُظهر قدرة الفريق على تطوير حلول رقمية مؤسسية احترافية تجمع بين:

التقنية الحديثة،

التصميم العصري،

وسهولة الاستخدام.

يمكن توظيفه في مؤسسات حكومية أو خاصة لتقليل الجهد الورقي وتسريع عملية الاستجابة للشكاوى.

🏆 خلاصة التوصيف (للصفحة التسويقية)

تطبيق الشَّكَهَة هو نظام رقمي متكامل لإدارة الشكاوى، تم تصميمه وتطويره بواسطة فريق Genius Software Core باستخدام أحدث تقنيات الويب الحديثة.
يجمع المشروع بين واجهة مستخدم مرنة ولوحة إدارة قوية، ويهدف إلى أتمتة عملية استقبال ومعالجة الشكاوى والملاحظات بكفاءة وأمان.
النظام قابل للتخصيص، التوسع، والتطبيق في مختلف المجالات الخدمية والإدارية، مع دعم كامل للغة العربية وواجهة تفاعلية حديثة.